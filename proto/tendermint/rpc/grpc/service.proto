syntax = "proto3";
package tendermint.rpc.grpc;
option go_package = "github.com/tendermint/tendermint/rpc/grpcgen;grpcgen";

// TendermintService는 Tendermint 블록체인의 다양한 데이터를 조회하는 gRPC 서비스입니다.
service TendermintService {
  // 체크포인트 관련 메서드
  rpc FetchCheckpoint(RequestFetchCheckpoint) returns (ResponseFetchCheckpoint) {}
  rpc FetchCheckpointCount(RequestFetchCheckpointCount) returns (ResponseFetchCheckpointCount) {}
  
  // 마일스톤 관련 메서드
  rpc FetchMilestone(RequestFetchMilestone) returns (ResponseFetchMilestone) {}
  rpc FetchMilestoneCount(RequestFetchMilestoneCount) returns (ResponseFetchMilestoneCount) {}
  rpc FetchNoAckMilestone(RequestFetchNoAckMilestone) returns (ResponseFetchNoAckMilestone) {}
  
  // 상태 동기화 관련 메서드
  rpc StateSyncEvents(RequestStateSyncEvents) returns (ResponseStateSyncEvents) {}
  rpc CommitStates(RequestCommitStates) returns (ResponseCommitStates) {}
  
  // 스팬 관련 메서드
  rpc Span(RequestSpan) returns (ResponseSpan) {}
  
  // 블록체인 정보 관련 메서드
  rpc BlockInfo(RequestBlockInfo) returns (ResponseBlockInfo) {}
  
  // Mempool information services
  rpc MempoolInfo(RequestMempoolInfo) returns (ResponseMempoolInfo) {}
}

// 체크포인트 관련 메시지
message RequestFetchCheckpoint {
  int64 checkpoint_number = 1;
}

message ResponseFetchCheckpoint {
  Checkpoint checkpoint = 1;
}

message Checkpoint {
  int64 number = 1;
  bytes data = 2;
  bytes root_hash = 3;
  int64 start_block = 4;
  int64 end_block = 5;
}

message RequestFetchCheckpointCount {}

message ResponseFetchCheckpointCount {
  int64 count = 1;
}

// 마일스톤 관련 메시지
message RequestFetchMilestone {
  int64 milestone_id = 1;
}

message ResponseFetchMilestone {
  Milestone milestone = 1;
}

message Milestone {
  int64 id = 1;
  bytes data = 2;
  bytes root_hash = 3;
  int64 start_block = 4;
  int64 end_block = 5;
  bool ack = 6;
}

message RequestFetchMilestoneCount {}

message ResponseFetchMilestoneCount {
  int64 count = 1;
}

message RequestFetchNoAckMilestone {}

message ResponseFetchNoAckMilestone {
  repeated int64 milestone_ids = 1;
}

// 상태 동기화 관련 메시지
message RequestStateSyncEvents {
  int64 from_time = 1;
  int64 to_time = 2;
  string record_type = 3;
}

message ResponseStateSyncEvents {
  repeated Event events = 1;
}

message Event {
  int64 id = 1;
  int64 time = 2;
  bytes data = 3;
  string record_type = 4;
}

message RequestCommitStates {
  repeated int64 event_ids = 1;
}

message ResponseCommitStates {
  repeated int64 failed_ids = 1;
}

// 스팬 관련 메시지
message RequestSpan {
  int64 span_id = 1;
}

message ResponseSpan {
  Span span = 1;
}

message Span {
  int64 id = 1;
  bytes data = 2;
  int64 start_time = 3;
  int64 end_time = 4;
}

// 블록체인 정보 관련 메시지
message RequestBlockInfo {
  int64 height = 1;
}

message ResponseBlockInfo {
  BlockInfo block = 1;
}

message BlockInfo {
  int64 height = 1;
  bytes hash = 2;
  bytes data = 3;
  bytes app_hash = 4;
  int64 time = 5;
  int32 num_txs = 6;
}

message RequestMempoolInfo {}

message ResponseMempoolInfo {
  int32 tx_count = 1;
  int64 total_size = 2;
  repeated TxInfo txs_info = 3;
}

message TxInfo {
  bytes hash = 1;
  int32 size = 2;
  int64 gas_wanted = 3;
  int64 gas_used = 4;
} 