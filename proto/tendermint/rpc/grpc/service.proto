syntax = "proto3";
package tendermint.rpc.grpc;
option  go_package = "github.com/tendermint/tendermint/rpc/grpc;coregrpc";

import "tendermint/abci/types.proto";
import "tendermint/types/types.proto";
import "tendermint/types/validator.proto";
import "tendermint/types/block.proto";

//----------------------------------------
// Checkpoint Messages

message RequestFetchCheckpoint {
  int64 checkpoint_number = 1;
}

message ResponseFetchCheckpoint {
  bytes data = 1;
  string root_hash = 2;
  int64 start_block = 3;
  int64 end_block = 4;
}

message RequestFetchCheckpointCount {
}

message ResponseFetchCheckpointCount {
  int64 count = 1;
}

//----------------------------------------
// Milestone Messages

message RequestFetchMilestone {
  int64 milestone_id = 1;
}

message ResponseFetchMilestone {
  bytes data = 1;
  string root_hash = 2;
  int64 start_block = 3;
  int64 end_block = 4;
}

message RequestFetchMilestoneCount {
}

message ResponseFetchMilestoneCount {
  int64 count = 1;
}

message RequestFetchNoAckMilestone {
}

message ResponseFetchNoAckMilestone {
  repeated int64 milestone_ids = 1;
}

//----------------------------------------
// Clerk Messages

message EventRecord {
  uint64 id = 1;
  int64 time = 2;
  bytes data = 3;
  string record_type = 4;
}

message RequestStateSyncEvents {
  int64 from_time = 1;
  int64 to_time = 2;
  string record_type = 3;
}

message ResponseStateSyncEvents {
  repeated EventRecord records = 1;
}

message RequestCommitStates {
  repeated int64 event_ids = 1;
}

message ResponseCommitStates {
  bool success = 1;
  repeated int64 failed_event_ids = 2;
  string error_message = 3;
}

//----------------------------------------
// Span Messages

message RequestSpan {
  int64 span_id = 1;
}

message ResponseSpan {
  int64 span_id = 1;
  int64 start_block = 2;
  int64 end_block = 3;
  repeated tendermint.types.Validator validators = 4;
  repeated uint64 validator_powers = 5;
}

//----------------------------------------
// Block Information Messages

message RequestBlockInfo {
  int64 height = 1;
}

message ResponseBlockInfo {
  tendermint.types.Block block = 1;
  string block_id = 2;
  string app_hash = 3;
  int64 last_commit_round = 4;
  repeated string validators = 5;
}

//----------------------------------------
// Mempool Information Messages

message RequestMempoolInfo {
}

message ResponseMempoolInfo {
  int64 size = 1;
  int64 max_size = 2;
  repeated bytes pending_txs = 3;
}

//----------------------------------------
// Service Definition

service TendermintService {
  // Checkpoint services
  rpc FetchCheckpoint(RequestFetchCheckpoint) returns (ResponseFetchCheckpoint);
  rpc FetchCheckpointCount(RequestFetchCheckpointCount) returns (ResponseFetchCheckpointCount);
  
  // Milestone services
  rpc FetchMilestone(RequestFetchMilestone) returns (ResponseFetchMilestone);
  rpc FetchMilestoneCount(RequestFetchMilestoneCount) returns (ResponseFetchMilestoneCount);
  rpc FetchNoAckMilestone(RequestFetchNoAckMilestone) returns (ResponseFetchNoAckMilestone);
  
  // Clerk services
  rpc StateSyncEvents(RequestStateSyncEvents) returns (ResponseStateSyncEvents);
  rpc CommitStates(RequestCommitStates) returns (ResponseCommitStates);
  
  // Span services
  rpc Span(RequestSpan) returns (ResponseSpan);
  
  // Block information services
  rpc BlockInfo(RequestBlockInfo) returns (ResponseBlockInfo);
  
  // Mempool information services
  rpc MempoolInfo(RequestMempoolInfo) returns (ResponseMempoolInfo);
} 